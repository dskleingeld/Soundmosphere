keywords = ['a cut above', 'absolutely', 'absorbed', 'accurate', 'adaptable', 'adequate', 'adoration', 'advantage', 'afraid', 'aggravate', 'aggravated', 'aggressive', 'agitated', 'agony', 'alarmed', 'alienated', 'aligned', 'always', 'amazed', 'ambivalent', 'amused', 'angry', 'anguished', 'animated', 'annoyed', 'antagonistic', 'anticipating', 'anxious', 'appalled', 'approving', 'argumentative', 'aroused', 'assured', 'astonishing', 'astounded', 'at ease', 'atrocious', 'attraction', 'authentic', 'authoritative', 'aware', 'awkward', 'balanced', 'banned', 'bargain', 'beaming', 'behind the scenes', 'bitter', 'blacklisted', 'blessed', 'blissful', 'blushing', 'bold', 'bored', 'bountiful', 'brave', 'bright', 'calm', 'capable', 'carefree', 'caring', 'cautious', 'centered', 'certain', 'certainly', 'cheerful', 'child-like', 'clarity', 'clear', 'comfortable', 'compassionate', 'compulsive', 'concealed', 'concern', 'condemning', 'condescending', 'confessions', 'confident', 'confidential', 'confused', 'conscientious', 'constructive', 'contempt', 'content', 'contrary', 'controlling', 'controversial', 'convenient', 'cooperative', 'corrupting', 'courageous', 'cover-up', 'covert', 'cowardly', 'creative', 'critical', 'curious', 'damaging', 'daring', 'deadline', 'deceived', 'defeated', 'definitely', 'dejected', 'delighted', 'deplorable', 'depressed', 'desperate', 'despicable', 'disadvantages', 'disappointed', 'disastrous', 'discount', 'disdainful', 'disempowered', 'disgusted', 'dishonest', 'disillusioned', 'disliked', 'dismayed', 'disoriented', 'distracted', 'distraught', 'distressed', 'distrustful', 'distrusting', 'disturbed', 'doomed', 'doubtful', 'dreadful', 'dreading', 'dynamic', 'eager', 'earnest', 'easy', 'ecstatic', 'efficient', 'elated', 'eliminate', 'embarrassed', 'emphasize', 'empowered', 'encouraged', 'energetic', 'enraged', 'enthusiastic', 'envious', 'euphoric', 'exasperated', 'excellent', 'excited', 'exhausted', 'exhilarated', 'explode', 'extra', 'extremely', 'exuberant', 'fatigued', 'fearful', 'festive', 'fine', 'first ever', 'fluid', 'focused', 'fondness', 'forbidden', 'forgiving', 'fortune', 'freebie', 'freedom', 'frenzied', 'frisky', 'frustrated', 'fulfilled', 'fun-loving', 'funny', 'genuine', 'genuine', 'gleeful', 'glorious', 'glowing', 'graceful', 'grateful', 'gratified', 'grief-stricken', 'grounded', 'grumpy', 'guaranteed', 'guilty', 'happy', 'harmful', 'harsh', 'hateful', 'healthy', 'helpful', 'helpless', 'helplessness', 'hesitant', 'hidden', ' likely', 'honest', 'honored', 'hopeful', 'hopeless', 'horrified', 'hostile', 'humiliated', 'humility', 'hurt', 'immediately', 'imminently', 'impatient', 'in the zone', 'incapable', 'incapacitated', 'incompetent', 'inconsiderate', 'indecisive', 'indifferent', 'infatuated', 'inferior', 'infuriated', 'innocent', 'insecure', 'insider', 'inspired', 'instant savings', 'instantly', 'intel', 'intelligent', 'interested', 'intrigued', 'introducing', 'investment', 'irritated', 'isolated', 'jackpot', 'jealous', 'jittery', 'jovial', 'joyful', 'joyous', 'jubilant', 'judgmental', 'keen', 'laughing', 'left behind', 'liberated', 'light', 'lighthearted', 'liking', 'limited', 'lonely', 'love', 'lust', 'magical', 'magnificent', 'malicious', 'manipulative', 'meditative', 'melancholy', 'miracle', 'misgiving', 'missing out', 'most important', 'motivated', 'natural', 'neglected', 'nervous', 'no one talks about', 'non-controlling', 'numb', 'off-kilter', 'off-the record', 'offensive', 'okay', 'open-minded', 'optimistic', 'ordeal', 'outraged', 'outrageousness', 'overjoyed', 'overwhelmed', 'panicked', 'paralyzed', 'pathetic', 'perplexed', 'pessimistic', 'pity', 'placid', 'playful', 'pleased', 'poisonous', 'powerless', 'preoccupied', 'privileged', 'productive', 'profitable', 'proud', 'proven', 'provoke', 'quarrelsome', 'quick', 'quiet', 'radiant', 'rageful', 'rebellious', 'receptive', 'reduced', 'reflective', 'regretful', 'rejected', 'relaxed', 'relaxed', 'reliable', 'relieved', 'remarkable', 'reprimanding', 'repulsed', 'repulsive', 'resentful', 'resourceful', 'responsible', 'responsive', 'rested', 'restless', 'results', 'retaliating', 'revengeful', 'revolutionary', 'revulsion', 'sad', 'sadistic', 'safe', 'sarcastic', 'satisfied', 'save', 'scandal', 'scared', 'scornful', 'secret', 'secret agenda', 'secret plot', 'secure', 'seething', 'seize', 'self conscious', 'self-hating', 'self-sufficient', 'sensational', 'serene', 'severe', 'shamed', 'shameful', 'shocked', 'shocking', 'should', 'sincere', 'skyrocket', 'smiling', 'solid', 'sorrow', 'spirited', 'spiteful', 'spontaneous', 'spunky', 'squirming', 'stable', 'startling', 'steady', 'still', 'stoic', 'stressed', 'strongly suggest', 'stunned', 'sunny', 'superb', 'superior', 'supported', 'supportive', 'sure', 'surprised', 'suspicious', 'sympathy', 'tenacious', 'tender', 'tenderness', 'tense', 'terrified', 'thankful', 'threatened', 'thrilled', 'ticked off', 'tickled', 'tragic', 'transparency', 'trapped', 'tremendous', 'truly', 'trust', 'trusting', 'trustworthy', 'truthful', 'twitching', 'unassuming', 'unbelievable', 'unburdened', 'uncaring', 'uncertain', 'uncomfortable', 'underground', 'unhurried', 'uninterested', 'unique', 'unjustified', 'unreliable', 'unresponsive', 'unstable', 'unsure', 'upbeat', 'uplifted', 'urge', 'vengeful', 'venomous', 'vibrant', 'vigorous', 'vilified', 'vindictive', 'violated', 'violent', 'vulnerable', 'waiting', 'weary', 'wicked', 'wonderful', 'woozy', 'worried', 'worthwhile', 'youthful', 'autumn', 'mist', 'white', 'chill', 'sun', 'shadow', 'shadows', 'ride', 'rode', 'grass', 'flower', 'flowers', 'bird', 'birds', 'tree', 'trees', 'herd', 'herds', 'deer', 'browse', 'browsing', 'sit', 'sitting', 'noon', 'shade', 'dragon', 'dragons', 'fire', 'destruct', 'destruction', 'fight', 'war', 'destroy', 'blood', 'die', 'dead', 'kill', 'hurtle', 'hurtled', 'crumble', 'crumbled', 'smaug', 'burn', 'burning', 'troll', 'goblin', 'shriek', 'wail', 'wailing']

energy = [-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, -1]

stress = [-1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

newkeywords = ["dragon", "dragons", "fire", "destruct", "destruction", "fight", "war", "destroy", "blood", "die", "dead", "kill", "hurtle", "hurtled", "crumble", "crumbled", "Smaug", "burn", "burning", "troll", "goblin", "shriek", "wail", "wailing"]
newemotions = ["frantic", "frantic", "frantic", "depression", "depression", "frantic", "frantic", "depression", "depression", "depression", "depression", "depression", "frantic", "frantic", "frantic", "frantic", "depression", "depression", "depression", "depression", "frantic", "frantic", "depression", "depression"]

from numpy import zeros

#energy = zeros(len(emotions))
#stress = zeros(len(emotions))
def addwords():
  for i in range(len(newkeywords)):
      if newkeywords[i] not in keywords:
          keywords.append(newkeywords[i])
          if newemotions[i] == "contentment":
              energy.append(-1)
              stress.append(-1)
          elif newemotions[i] == "frantic":
              energy.append(1)
              stress.append(1)
          elif newemotions[i] == "exuberance":
              energy.append(1)
              stress.append(-1)
          else:
              energy.append(-1)
              stress.append(1)
      else:
          print("keyword already in list")

  print(keywords, energy, stress)

def changecaps():
  newkeywords = []
  for word in keywords:
    newkeywords.append(word.casefold())

  print(newkeywords)
  
def main():
  changecaps()
  
if __name__ == "__main__":
    main()

